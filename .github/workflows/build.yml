#name: Build
#on:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]
#  workflow_dispatch:
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    permissions:
#      id-token: write
#      security-events: write
#      actions: read
#      contents: read
#    env:
#      MYSQL_HOST_WITH_PORT: ${{ secrets.MYSQL_HOST_WITH_PORT }}
#      MYSQL_DB_NAME: ${{ secrets.MYSQL_DB_NAME }}
#      MYSQL_USER: ${{ secrets.MYSQL_USER }}
#      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v4
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#          cache: maven
#
#      ## Secret Scanning
#      - name: Scan for Secrets using Trivy
#        uses: aquasecurity/trivy-action@0.20.0
#        with:
#          targets: 'src/'  # Replace 'src/' with your source code directory
#          format: 'table'  # Output format (table, json, csv, etc.)
#          ignore_unfixed: 'false'  # Whether to ignore unfixed vulnerabilities
#          severity: 'HIGH,CRITICAL,MEDIUM,LOW'  # Minimum severity level to report (e.g., 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL')
#          scan-type: 'fs'
#          exit-code: '0'
#          # scan-ref: '.'
#          # trivy-config: trivy.yaml
#
#      - name: Run Unit Tests
#        run: mvn test
#
#      - name: Generate Code Coverage Report
#        run: mvn jacoco:report
#
#      - name: Analyze with SonarQube
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#        run: |
#          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=githubaction-cicd
#
#      - name: Build and analyze
#        run: |
#          mvn clean package
#
#      - name: Authenticate with Google Cloud
#      - id: auth
#        uses: google-github-actions/auth@v2.0.0
#          with:
#            workload_identity_provider: '${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}'
#            service_account: '${{ secrets.SERVICE_ACCOUNT_EMAIL }}'
#
#      # Uncomment the following steps when ready to build and push Docker images
#
#      # - name: Build Docker image
#      #   run: |
#      #     docker build -t us-central1-docker.pkg.dev/ashiph-2/githubaction-cicd-artifact-registry/githubaction-cicd-dockerimage:${{ github.sha }} .
#
#      # - name: Run Trivy vulnerability scanner
#      #   uses: aquasecurity/trivy-action@0.20.0
#      #   with:
#      #     image-ref: us-central1-docker.pkg.dev/ashiph-2/githubaction-cicd-artifact-registry/githubaction-cicd-dockerimage:${{ github.sha }}
#      #     format: 'sarif'
#      #     output: 'trivy-results.sarif'
#      #     ignore-unfixed: true
#      #     vuln-type: 'os,library'
#      #     severity: 'CRITICAL,HIGH'
#
#      # - name: Upload Trivy scan results to GitHub Security tab
#      #   uses: github/codeql-action/upload-sarif@v3
#      #   with:
#      #     sarif_file: 'trivy-results.sarif'
#
#      # - name: Docker Push to GAR
#      #   run: |
#      #     docker push us-central1-docker.pkg.dev/ashiph-2/githubaction-cicd-artifact-registry/githubaction-cicd-dockerimage:${{ github.sha }}

name: Build
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      security-events: write
      actions: read
      contents: read
    env:
      MYSQL_HOST_WITH_PORT: ${{ secrets.MYSQL_HOST_WITH_PORT }}
      MYSQL_DB_NAME: ${{ secrets.MYSQL_DB_NAME }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      ## Secret Scanning
      - name: Scan for Secrets using Trivy
        uses: aquasecurity/trivy-action@0.20.0
        with:
          targets: 'src/'  # Replace 'src/' with your source code directory
          format: 'table'  # Output format (table, json, csv, etc.)
          ignore-unfixed: 'false'  # Whether to ignore unfixed vulnerabilities
          severity: 'HIGH,CRITICAL,MEDIUM,LOW'  # Minimum severity level to report (e.g., 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL')
          scan-type: 'fs'
          exit-code: '0'

      - name: Run Unit Tests
        run: mvn test

      - name: Generate Code Coverage Report
        run: mvn jacoco:report

      - name: Analyze with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=githubaction-cicd

      - name: Build and analyze
        run: |
          mvn clean package

#      - name: Authenticate with Google Cloud
#        id: auth  # Correct placement of 'id'
#        uses: google-github-actions/auth@v2.0.0
#        with:
#          workload_identity_provider: '${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}'
#          service_account: '${{ secrets.SERVICE_ACCOUNT_EMAIL }}'

      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v2.0.0
        with:
          workload_identity_provider: '${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ secrets.SERVICE_ACCOUNT_EMAIL }}'

      # Uncomment the following steps when ready to build and push Docker images

      # - name: Build Docker image
      #   run: |
      #     docker build -t us-central1-docker.pkg.dev/ashiph-2/githubaction-cicd-artifact-registry/githubaction-cicd-dockerimage:${{ github.sha }} .

      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@0.20.0
      #   with:
      #     image-ref: us-central1-docker.pkg.dev/ashiph-2/githubaction-cicd-artifact-registry/githubaction-cicd-dockerimage:${{ github.sha }}
      #     format: 'sarif'
      #     output: 'trivy-results.sarif'
      #     ignore-unfixed: true
      #     vuln-type: 'os,library'
      #     severity: 'CRITICAL,HIGH'

      # - name: Upload Trivy scan results to GitHub Security tab
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: 'trivy-results.sarif'

      # - name: Docker Push to GAR
      #   run: |
      #     docker push us-central1-docker.pkg.dev/ashiph-2/githubaction-cicd-artifact-registry/githubaction-cicd-dockerimage:${{ github.sha }}
